<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Laravel on Hsuan&#39;s Coding Blog</title>
    <link>https://hsuanblog.live/tags/laravel/</link>
    <description>Recent content in Laravel on Hsuan&#39;s Coding Blog</description>
    <image>
      <title>Hsuan&#39;s Coding Blog</title>
      <url>https://hsuanblog.live/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://hsuanblog.live/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.125.7</generator>
    <language>en</language>
    <lastBuildDate>Fri, 19 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://hsuanblog.live/tags/laravel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Laravel 關聯 Model</title>
      <link>https://hsuanblog.live/posts/laravel-%E9%97%9C%E8%81%AF-model/</link>
      <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://hsuanblog.live/posts/laravel-%E9%97%9C%E8%81%AF-model/</guid>
      <description>Laravel 關聯性Model基礎操作：belongs_to, has_one, has_many, many to many
1. 一對一關係 has_one 假設兩個Model：店主Owner、商店Store，店主擁有一間商店(Owner has one Store)，商店屬於一位店主(Store belongs to Owner)。
Owner: - id - name Store: - id - name - owner_id 首先要為Store創建欄位owner_id，在migration中可以使用$table-&amp;gt;foreignId(&#39;owner_id&#39;)建立欄位(foreignId等同於unsignedBigInt)。
Owner.php中寫入hasOne：
// app/Models/Owner.php public function store() { return $this-&amp;gt;hasOne(Store::class); } Store.php中寫入belonsTo：
// app/Models/Store.php public function owner() { return $this-&amp;gt;belongsTo(Owner::class); } 使用方法：
// 從Owner角度建立Store // 方法一：使用create $o1 = Owner::find(1); $o1-&amp;gt;store()-&amp;gt;create([&amp;#39;name&amp;#39;=&amp;gt;&amp;#39;store1&amp;#39;]); // 方法二：使用save $o1 = Owner::find(1); $s2 = new Store([&amp;#39;name&amp;#39;=?&amp;#39;store2&amp;#39;]); $o1-&amp;gt;store()-&amp;gt;save($s2); // 從Store角度建立Owner $o2 = Owner::find(2); $s3 = new Store([&amp;#39;name&amp;#39;=&amp;gt;&amp;#39;store3&amp;#39;]); $s3-&amp;gt;owner()-&amp;gt;associate($o2); $s3-&amp;gt;save(); // 撈取該Owner的Store $o1-&amp;gt;store; $o1-&amp;gt;store-&amp;gt;name; // 撈取該Store的Owner $s1-&amp;gt;owner; $s1-&amp;gt;owner-&amp;gt;name; hasOne與belongsTo都可以獨立設置foreign key或owner key：</description>
    </item>
  </channel>
</rss>
